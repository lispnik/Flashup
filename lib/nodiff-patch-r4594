Index: src/core/com/itextpdf/text/pdf/PdfDocument.java
===================================================================
--- src/core/com/itextpdf/text/pdf/PdfDocument.java	(revision 4594)
+++ src/core/com/itextpdf/text/pdf/PdfDocument.java	(working copy)
@@ -112,7 +112,6 @@
         PdfInfo() {
             super();
             addProducer();
-            addCreationDate();
         }
 
         /**
@@ -188,16 +187,6 @@
             put(PdfName.PRODUCER, new PdfString(getVersion()));
         }
 
-        /**
-         * Adds the date of creation to the document.
-         */
-
-        void addCreationDate() {
-            PdfString date = new PdfDate();
-            put(PdfName.CREATIONDATE, date);
-            put(PdfName.MODDATE, date);
-        }
-
         void addkey(String key, String value) {
             if (key.equals("Producer") || key.equals("CreationDate"))
                 return;
@@ -311,7 +300,6 @@
     public PdfDocument() {
         super();
         addProducer();
-        addCreationDate();
     }
 
     /** The <CODE>PdfWriter</CODE>. */
@@ -423,8 +411,6 @@
                     info.addProducer();
                     break;
                 case Element.CREATIONDATE:
-                    // you can not set the creation date, only reset it
-                    info.addCreationDate();
                     break;
 
                 // content (text)
Index: src/core/com/itextpdf/text/pdf/BaseFont.java
===================================================================
--- src/core/com/itextpdf/text/pdf/BaseFont.java	(revision 4594)
+++ src/core/com/itextpdf/text/pdf/BaseFont.java	(working copy)
@@ -1110,9 +1110,10 @@
      * @return the subset prefix
      */
     public static String createSubsetPrefix() {
+        java.util.Random rand = new java.util.Random(0);
         String s = "";
         for (int k = 0; k < 6; ++k)
-            s += (char)(Math.random() * 26 + 'A');
+            s += (char)(rand.nextDouble() * 26 + 'A');
         return s + "+";
     }
 
